// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name OrendaFormulaiOS
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import Foundation
@_exported import OrendaFormulaiOS
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_hasMissingDesignatedInitializers public class OrendaCalculator {
  public static func calculateLSI(waterTemperatureCurrent: OrendaFormulaiOS.Temperature, pHCurrent: Swift.Double, totalAlkalinityCurrent: Swift.Double, calciumCurrent: Swift.Double, cyaCurrent: Swift.Double, saltCurrent: Swift.Double, boratesCurrent: Swift.Double, waterTemperatureDesired: OrendaFormulaiOS.Temperature, pHDesired: Swift.Double, totalAlkalinityDesired: Swift.Double, calciumDesired: Swift.Double, cyaDesired: Swift.Double, saltDesired: Swift.Double, boratesDesired: Swift.Double) -> OrendaFormulaiOS.LSIResult?
  public static func estimatePoolVolume(shape: OrendaFormulaiOS.PoolShape, measurement: OrendaFormulaiOS.OrendaMeasurement) -> Swift.Double
  public static func calculateDosages(poolVolume: OrendaFormulaiOS.PoolVolume, measurement: OrendaFormulaiOS.OrendaMeasurement, pHCurrent: Swift.Double, currentTemperature: OrendaFormulaiOS.Temperature, totalAlkalinityCurrent: Swift.Double, calciumCurrent: Swift.Double, cyaCurrent: Swift.Double, saltCurrent: Swift.Double, boratesCurrent: Swift.Double, chlorineCurrent: Swift.Double, phosphateCurrent: Swift.Double, pHDesired: Swift.Double, totalAlkalinityDesired: Swift.Double, calciumDesired: Swift.Double, cyaDesired: Swift.Double, saltDesired: Swift.Double, chlorineDesired: Swift.Double, phosphateDesired: Swift.Double) -> Swift.String
  public static func initialize(token: Swift.String) -> Swift.Bool
  public static func getLsiColor(_ value: Swift.Double) -> Swift.String
  public static func getPhColor(_ value: Swift.Double) -> Swift.String
  public static func getTotalAlkalinityColor(_ value: Swift.Double) -> Swift.String
  public static func getCalciumColor(_ value: Swift.Double) -> Swift.String
  public static func getCyaColor(_ value: Swift.Double) -> Swift.String
  public static func getBorateColor(_ value: Swift.Double) -> Swift.String
  public static func getCarbonateAlkalinityColor(_ value: Swift.Double) -> Swift.String
  public static func getPhCeilingColor(_ value: Swift.Double) -> Swift.String
  @objc deinit
}
public enum PoolShape {
  case circle(radius: Swift.Double, depth: Swift.Double)
  case rectangle(length: Swift.Double, width: Swift.Double, deepDepth: Swift.Double, shallowDepth: Swift.Double)
  case oblong(length: Swift.Double, smallDiameter: Swift.Double, largeDiameter: Swift.Double, deepDepth: Swift.Double, shallowDepth: Swift.Double)
}
public enum PoolVolume {
  case gallons(Swift.Double)
  case liters(Swift.Double)
}
public enum Temperature {
  case celsius(Swift.Double)
  case fahrenheit(Swift.Double)
}
